/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import interfaces.IClienteService;
import interfaces.IMesaService;
import interfaces.IReservacionService;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Cliente;
import models.Mesa;
import services.ClienteService;
import services.MesaService;
import services.ReservacionService;

/**
 *
 * @author pausa
 */
public class FrmReservacion extends javax.swing.JFrame {

    private IMesaService mesaService;
    private IClienteService clienteService;
    private IReservacionService reservacionService;
    private Long idClienteSeleccionado;
    private Long idMesaSeleccionado;
    private List<Mesa> mesas;
    private List<Cliente> clientes;
    /**
     * Creates new form FrmReservacion
     */
    public FrmReservacion() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        this.mesaService = new MesaService();
        this.clienteService = new ClienteService();
        this.reservacionService = new ReservacionService();
        this.mesas = mesaService.getMesas();
        this.clientes = clienteService.getClientes();
        
        cargarMesas();
        cargarClientes();
        setLocationRelativeTo(null);
    }

    private void cargarMesas(){
        DefaultTableModel model = (DefaultTableModel) jTableMesas.getModel();
        for (Mesa m : mesas) {
            model.addRow(new Object[]{m.getId(), m.getTipo(), m.getUbicacion(), m.getCapacidad(), m.getCodigoMesa()});
        }
    }
    
    private void cargarClientes(){
        DefaultTableModel model = (DefaultTableModel) jTableClientes.getModel();
        for(Cliente c : clientes){
            model.addRow(new Object[]{c.getId(), c.getNombre(), c.getTelefono()});
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelReservaciones = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMesas = new javax.swing.JTable();
        dateTimePickerFechaHora = new com.github.lgooddatepicker.components.DateTimePicker();
        LabelFechaHora = new javax.swing.JLabel();
        LabelNumPersonas = new javax.swing.JLabel();
        txfNumPersonas = new javax.swing.JTextField();
        btnReservar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelReservaciones.setText("Reservaciones");
        LabelReservaciones.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N

        jTableMesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo", "Ubicacion", "Capacidad", "CodigoMesa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMesas.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jTableMesas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMesasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMesas);
        if (jTableMesas.getColumnModel().getColumnCount() > 0) {
            jTableMesas.getColumnModel().getColumn(0).setMinWidth(35);
            jTableMesas.getColumnModel().getColumn(0).setPreferredWidth(35);
            jTableMesas.getColumnModel().getColumn(0).setMaxWidth(35);
        }

        LabelFechaHora.setText("Fecha y Hora");
        LabelFechaHora.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N

        LabelNumPersonas.setText("No. de Personas");
        LabelNumPersonas.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N

        txfNumPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfNumPersonasActionPerformed(evt);
            }
        });

        btnReservar.setText("REALIZAR RESERVA");
        btnReservar.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        btnReservar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReservarMouseClicked(evt);
            }
        });
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("COSTO:");
        jLabel1.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableClientes);
        if (jTableClientes.getColumnModel().getColumnCount() > 0) {
            jTableClientes.getColumnModel().getColumn(0).setMinWidth(35);
            jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(35);
            jTableClientes.getColumnModel().getColumn(0).setMaxWidth(35);
        }

        jButton2.setText("jButton2");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelReservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(dateTimePickerFechaHora, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LabelFechaHora)
                                .addComponent(LabelNumPersonas)
                                .addComponent(txfNumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(103, 103, 103)
                            .addComponent(jButton2)
                            .addGap(114, 114, 114)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(LabelReservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelFechaHora)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateTimePickerFechaHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LabelNumPersonas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfNumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReservar)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txfNumPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfNumPersonasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfNumPersonasActionPerformed

    
    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        
    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnReservarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReservarMouseClicked
        // TODO add your handling code here:
        if (txfNumPersonas.getText().isEmpty() || Integer.parseInt(txfNumPersonas.getText()) == 0) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese el numero de personas.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int numPersonas;
        try {
            numPersonas = Integer.parseInt(txfNumPersonas.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese solo numeros enteros en el campo de personas.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String dateTimePickerInput = dateTimePickerFechaHora.toString();
        LocalDateTime localDateTime = LocalDateTime.parse(dateTimePickerInput);
        
        for(Mesa m : mesas){
            if(m.getId() == idMesaSeleccionado){
                int costoReservacion = switch (m.getTipo()) {
                    case "Pequeña" -> 300;
                    case "Mediana" -> 500;
                    case "Grande" -> 700;
                    default -> 0;
                };
                for(Cliente c : clientes){
                    if(c.getId() == idClienteSeleccionado){
                        reservacionService.crearReservacion(c, m, localDateTime, numPersonas, costoReservacion);
                        System.out.println("CREWQEFGGVREVVWR");
                    }
                }
            }
        }
        
    }//GEN-LAST:event_btnReservarMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton2MouseClicked

    private void jTableMesasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMesasMouseClicked
        // TODO add your handling code here:
        int rowMesa = jTableMesas.getSelectedRow();
        if(rowMesa != -1){
            idMesaSeleccionado = (Long) jTableMesas.getValueAt(rowMesa, 0);
        }
    }//GEN-LAST:event_jTableMesasMouseClicked

    private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseClicked
        // TODO add your handling code here:
        int rowCliente = jTableClientes.getSelectedRow();
        if(rowCliente != -1){
            idClienteSeleccionado = (Long) jTableClientes.getValueAt(rowCliente, 0);
        }
    }//GEN-LAST:event_jTableClientesMouseClicked

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmReservacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmReservacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmReservacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmReservacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmReservacion().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelFechaHora;
    private javax.swing.JLabel LabelNumPersonas;
    private javax.swing.JLabel LabelReservaciones;
    private javax.swing.JButton btnReservar;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePickerFechaHora;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTable jTableMesas;
    private javax.swing.JTextField txfNumPersonas;
    // End of variables declaration//GEN-END:variables
}
